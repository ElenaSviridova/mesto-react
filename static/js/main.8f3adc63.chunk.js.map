{"version":3,"sources":["images/logo.svg","components/Header.js","images/edit-button.svg","images/plus.svg","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","images/Close-Icon.svg","components/ImagePopup.js","components/PopupWithForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","adress","token","this","_adress","_token","response","ok","json","Promise","reject","Error","status","fetch","headers","authorization","then","_getResponseData","profileName","profileAbout","method","body","JSON","stringify","name","about","data","link","id","cardId","avatarLink","avatar","Card","props","image","onClick","onCardClick","card","title","type","likeNumbers","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getProfileInfo","getInitialCards","map","item","likes","length","_id","editButtonPath","addButtonPath","Footer","ImagePopup","onClose","isOpen","closeIconPath","PopupWithForm","children","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f3adc63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import logo from '../images/logo.svg';\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n              <img src={logo} alt=\"Картинка логотипа\" className=\"header__logo\"/>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/edit-button.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","export class Api {\r\n    constructor({adress, token}) {\r\n        this._adress = adress;\r\n        this._token = token;\r\n    }\r\n\r\n    _getResponseData(response) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.reject(new Error(`Ошибка ${response.status}`))\r\n    }\r\n\r\n    getProfileInfo() {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }).then(this._getResponseData)\r\n    }\r\n\r\n    changeProfileInfo(profileName, profileAbout) {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              name: profileName,\r\n              about: profileAbout\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    getInitialCards() {\r\n        return  fetch(`${this._adress}/cards`,{\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }).then(this._getResponseData)\r\n    }\r\n\r\n    addCards(data) {\r\n        return fetch(`${this._adress}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization:this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    removeCards(id) {\r\n        return  fetch(`${this._adress}/cards/${id}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(this._getResponseData)  \r\n    }\r\n\r\n    setLike(cardId) {\r\n        return fetch(`${this._adress}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization:this._token,\r\n            }\r\n        })    \r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this._adress}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization:this._token\r\n            }\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    updateAvatar(avatarLink) {\r\n        return fetch(`${this._adress}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              avatar: avatarLink\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n}\r\n\r\nconst api = new Api({adress:'https://mesto.nomoreparties.co/v1/cohort-22', token:'3df83bef-b96a-43f8-aaa6-dee5c669d99f'});\r\n\r\nexport default api","import React from 'react';\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n      } \r\n\r\n    return (\r\n        <article className=\"element\">\r\n            <button className=\"element__delete\"></button>\r\n            <img className=\"element__image\" alt=\"картинки нет\" src={props.image} onClick={handleClick}/>\r\n            <div className=\"element__caption\">\r\n                <h2 className=\"element__title\">{props.title}</h2>\r\n                <div className=\"element__sign\">\r\n                    <button type=\"button\" className=\"element__like\"></button>\r\n                    <p className=\"element__like-numbers\">{props.likeNumbers}</p>\r\n                </div>\r\n            </div>\r\n        </article>     \r\n    )\r\n}\r\nexport default Card","import React, { useEffect, useState } from 'react';\r\nimport editButtonPath from '../images/edit-button.svg';\r\nimport addButtonPath from '../images/plus.svg';\r\nimport api from '../utils/api';\r\nimport Card from '../components/Card';\r\n\r\nfunction Main({onEditProfile, onAddPlace , onEditAvatar, onCardClick}) {\r\n  const [userName, setUserName] = useState('');\r\n  const [userDescription, setUserDescription] = useState('');\r\n  const [userAvatar, setUserAvatar] = useState('');\r\n  const [cards,setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getProfileInfo()\r\n      .then(data => {\r\n        setUserName(data.name)\r\n        setUserDescription(data.about)\r\n        setUserAvatar(data.avatar)\r\n      })\r\n  },[])\r\n\r\n  useEffect(() => {\r\n      api.getInitialCards()\r\n        .then(data => {\r\n            setCards(data.map(item => ({\r\n                title: item.name,\r\n                image: item.link,\r\n                likeNumbers: item.likes.length,\r\n                id: item._id\r\n              })))\r\n        })\r\n  }, [])\r\n\r\n    return (\r\n        <main className=\"main\">\r\n              <section className=\"profile\">\r\n                      <div className=\"profile__avatar\">\r\n                          <img src={userAvatar} alt=\"Картинка профиля\" className=\"profile__avatar-image\"/>\r\n                          <img onClick={onEditAvatar} src={editButtonPath} alt=\"Картинка при наведении\" className=\"profile__avatar-hover\"/>\r\n                      </div>\r\n                      <div className=\"profile__info\">\r\n                        <h1 className=\"profile__title\">{userName}</h1>\r\n                        <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button\">\r\n                          <img src={editButtonPath} alt=\"картинка добавить текст\" className=\"profile__edit-button-image\"/>\r\n                        </button>\r\n                        <p className=\"profile__subtitle\">{userDescription}</p>\r\n                      </div> \r\n                      <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button\">\r\n                          <img src={addButtonPath} alt=\"иконка кнопки\" className=\"profile__add-button-image\"/>\r\n                      </button>       \r\n              </section>\r\n              <section className=\"elements\">\r\n                  {cards.map((card) => <Card key={card.id} onCardClick={onCardClick} card={card} title={card.title} image={card.image} likeNumbers={card.likeNumbers} />)}\r\n                   \r\n              </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n                <p className=\"footer__author\">&copy;2021 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/Close-Icon.a004a2d5.svg\";","import closeIconPath from '../images/Close-Icon.svg';\r\nfunction ImagePopup({card, onClose, isOpen}) {\r\n    return (\r\n        <div className={`popup popup_image ${isOpen && 'popup_opened'}`}>\r\n                <div className=\"popup__big-picture\">\r\n                    <img src={card.image} alt=\"картинки нет\" className=\"popup__picture\" />\r\n                    <h2 className=\"popup__caption\">{card.title}</h2>\r\n                    <button className=\"popup__close-button\" onClick={onClose}>\r\n                        <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\r\n                    </button>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImagePopup;","import closeIconPath from '../images/Close-Icon.svg';\r\n\r\nfunction PopupWithForm({title, name, children, isOpen, onClose}) {\r\n    return (\r\n        <div className={`popup popup_${name} ${isOpen && 'popup_opened'}`}>\r\n            <form name={name} className=\"popup__container\" >\r\n                <button type=\"button\" className=\"popup__close-button\" onClick={onClose}>\r\n                    <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\r\n                </button>\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                {children}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'\nimport closeIconPath from '../images/Close-Icon.svg';\nimport '../index.css';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(false);\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false)\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n  return (\n       <div className=\"page\">\n          <Header />\n          <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n          <PopupWithForm title=\"Редактировать профиль\" name=\"edit\" isOpen={isEditProfilePopupOpen} children = {\n              <>\n                <input name=\"Author\" type=\"text\" id= \"author-input\" className=\"popup__input popup__input_text_name\" />\n                <span className=\"popup__error author-input-error\"></span>\n                <input name=\"Profile\" type=\"text\" id= \"profile-input\" className=\"popup__input popup__input_text_about-yourself\" />\n                <span className=\"popup__error profile-input-error\"></span>\n                <button type=\"submit\" className=\"popup__button\">Сохранить</button>\n              </>\n          } onClose={closeAllPopups} />\n          <PopupWithForm title=\"Новое место\" name=\"add\" isOpen={isAddPlacePopupOpen} children = {\n              <>\n                <input name=\"Name\" type=\"text\" id= \"author-add-input\" className=\"popup__input popup__input_text_name\" placeholder=\"Название\" />\n                <span className=\"popup__error author-add-input-error\"></span>\n                <input name=\"Link\" type=\"url\" id= \"profile-add-input\" className=\"popup__input popup__input_text_about-yourself\" placeholder=\"Ссылка на картинку\" />\n                <span className=\"popup__error profile-add-input-error\"></span>\n                <button type=\"submit\" className=\"popup__button\">Создать</button>\n              </>\n          } onClose={closeAllPopups}/>\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} isOpen={selectedCard}/>\n          <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" isOpen={isEditAvatarPopupOpen} children = {\n              <>\n                <input name=\"Link\" type=\"url\" id= \"avatar-input\" className=\"popup__input popup__input_text_about-yourself\" placeholder=\"Ссылка на картинку\" />\n                <span className=\"popup__error avatar-input-error\"></span>\n                <button type=\"submit\" className=\"popup__button\">Сохранить</button>\n              </>\n          } onClose={closeAllPopups} />\n            <div className=\"popup popup_delete-card\">\n                <form name=\"myForm\" className=\"popup__container\" >\n                    <button type=\"button\" className=\"popup__close-button\">\n                        <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\n                    </button>\n                    <h2 className=\"popup__question\">Вы уверены?</h2>\n                    <button type=\"submit\" className=\"popup__button popup__button_margin\">Да</button>\n                </form>    \n            </div>\n            <Footer />\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}