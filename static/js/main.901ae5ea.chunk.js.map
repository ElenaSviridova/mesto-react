{"version":3,"sources":["images/logo.svg","components/Header.js","images/edit-button.svg","images/plus.svg","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","images/Close-Icon.svg","components/ImagePopup.js","components/PopupWithForm.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","adress","token","this","_adress","_token","response","ok","json","Promise","reject","Error","status","fetch","headers","authorization","then","_getResponseData","profileName","profileAbout","method","body","JSON","stringify","name","about","data","link","id","cardId","isLiked","avatarLink","avatar","Card","card","onCardClick","likes","onClick","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getProfileInfo","catch","err","console","log","getInitialCards","map","item","_id","editButtonPath","addButtonPath","Footer","Date","getFullYear","ImagePopup","onClose","closeIconPath","PopupWithForm","title","children","isOpen","buttonText","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,iC,OCS1BA,MARf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACM,qBAAKC,IAAKC,EAAMC,IAAI,oGAAoBH,UAAU,oBCJjD,MAA0B,wCCA1B,MAA0B,iC,cCgG1BI,EAFH,IA9FZ,WACI,cAA8B,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,MAAQ,oBACzBC,KAAKC,QAAUH,EACfE,KAAKE,OAASH,EAHtB,oDAMI,SAAiBI,GACb,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OAAO,IAAIC,MAAJ,+CAAoBL,EAASM,YAV3D,4BAaI,WACI,OAAOC,MAAM,GAAD,OAAIV,KAAKC,QAAT,aAA6B,CACrCU,QAAS,CACLC,cAAeZ,KAAKE,UAEzBW,KAAKb,KAAKc,oBAlBrB,+BAqBI,SAAkBC,EAAaC,GAC3B,OAAON,MAAM,GAAD,OAAIV,KAAKC,QAAT,aAA6B,CACrCgB,OAAQ,QACRN,QAAS,CACLC,cAAeZ,KAAKE,OACpB,eAAgB,oBAEpBgB,KAAMC,KAAKC,UAAU,CACnBC,KAAMN,EACNO,MAAON,MAGZH,KAAKb,KAAKc,oBAjCnB,6BAoCI,WACI,OAAQJ,MAAM,GAAD,OAAIV,KAAKC,QAAT,UAAyB,CAClCU,QAAS,CACLC,cAAeZ,KAAKE,UAEzBW,KAAKb,KAAKc,oBAzCrB,sBA4CI,SAASS,GACL,OAAOb,MAAM,GAAD,OAAIV,KAAKC,QAAT,UAA0B,CAClCgB,OAAQ,OACRN,QAAS,CACLC,cAAcZ,KAAKE,OACnB,eAAgB,oBAEpBgB,KAAMC,KAAKC,UAAU,CACjBC,KAAME,EAAKF,KACXG,KAAMD,EAAKC,SAGlBX,KAAKb,KAAKc,oBAxDnB,yBA2DI,SAAYW,GACR,OAAQf,MAAM,GAAD,OAAIV,KAAKC,QAAT,kBAA0BwB,GAAK,CACxCR,OAAQ,SACRN,QAAS,CACLC,cAAeZ,KAAKE,UAG3BW,KAAKb,KAAKc,oBAlEnB,kCAqEI,SAAqBY,EAAQC,GACzB,OAAOjB,MAAM,GAAD,OAAIV,KAAKC,QAAT,wBAAgCyB,GAAU,CAClDT,OAAQU,EAAU,SAAW,MAC7BhB,QAAS,CACLC,cAAcZ,KAAKE,UAG1BW,KAAKb,KAAKc,oBA5EnB,0BA+EI,SAAac,GACT,OAAOlB,MAAM,GAAD,OAAIV,KAAKC,QAAT,oBAAoC,CAC5CgB,OAAQ,QACRN,QAAS,CACLC,cAAeZ,KAAKE,OACpB,eAAgB,oBAEpBgB,KAAMC,KAAKC,UAAU,CACnBS,OAAQD,MAGbf,KAAKb,KAAKc,sBA1FnB,KA8FY,CAAQ,CAAChB,OAAO,8CAA+CC,MAAM,yCC1ElE+B,MAnBf,YAAuD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaX,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,KAAMS,EAAQ,EAARA,MAK1C,OACI,0BAASxC,UAAU,UAAnB,UACI,wBAAQA,UAAU,oBAClB,qBAAKA,UAAU,iBAAiBG,IAAI,sEAAeF,IAAK8B,EAAMU,QAPtE,WACIF,EAAYD,MAOR,sBAAKtC,UAAU,mBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgC4B,IAChC,sBAAK5B,UAAU,gBAAf,UACI,wBAAQ0C,KAAK,SAAS1C,UAAU,kBAChC,mBAAGA,UAAU,wBAAb,SAAsCwC,EAAMG,mBCoDjDC,MA5Df,YAAwE,IAAzDC,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,WAAaC,EAA4B,EAA5BA,aAAcR,EAAc,EAAdA,YACvD,EAAgCS,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAyBN,mBAAS,IAAlC,mBAAOO,EAAP,KAAaC,EAAb,KA8BE,OA5BFC,qBAAU,WACRrD,EAAIsD,iBACDtC,MAAK,SAAAU,GACJoB,EAAYpB,EAAKF,MACjBwB,EAAmBtB,EAAKD,OACxByB,EAAcxB,EAAKM,WAEpBuB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAElB,IAEFH,qBAAU,WACNrD,EAAI2D,kBACD3C,MAAK,SAAAU,GACF+B,QAAQC,IAAIhC,GACZ0B,EAAS1B,EAAKkC,KAAI,SAAAC,GAAI,MAAK,CACvBrC,KAAMqC,EAAKrC,KACXG,KAAMkC,EAAKlC,KACXS,MAAOyB,EAAKzB,MACZ0B,IAAKD,EAAKC,YAGjBP,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAEnB,IAGG,uBAAM5D,UAAU,OAAhB,UACM,0BAASA,UAAU,UAAnB,UACQ,sBAAKA,UAAU,kBAAf,UACI,qBAAKC,IAAKoD,EAAYlD,IAAI,8FAAmBH,UAAU,0BACvD,qBAAKyC,QAASM,EAAc9C,IAAKkE,EAAgBhE,IAAI,6HAAyBH,UAAU,6BAE5F,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCiD,IAChC,wBAAQR,QAASI,EAAeH,KAAK,SAAS1C,UAAU,uBAAxD,SACE,qBAAKC,IAAKkE,EAAgBhE,IAAI,mIAA0BH,UAAU,iCAEpE,mBAAGA,UAAU,oBAAb,SAAkCmD,OAEpC,wBAAQV,QAASK,EAAYJ,KAAK,SAAS1C,UAAU,sBAArD,SACI,qBAAKC,IAAKmE,EAAejE,IAAI,4EAAgBH,UAAU,mCAGnE,yBAASA,UAAU,WAAnB,SACKuD,EAAMS,KAAI,SAAC1B,GAAD,OAAU,cAAC,EAAD,CAAqBC,YAAaA,EAAaD,KAAMA,EAAMV,KAAMU,EAAKV,KAAMG,KAAMO,EAAKP,KAAMS,MAAOF,EAAKE,OAA9FF,EAAK4B,cCnDxCG,MARf,WACI,OACI,wBAAQrE,UAAU,SAAlB,SACQ,oBAAGA,UAAU,iBAAb,kBAAqC,IAAIsE,MAAOC,cAAhD,sBCHD,MAA0B,uCCe1BC,MAdf,YAAsC,IAAjBlC,EAAgB,EAAhBA,KAAMmC,EAAU,EAAVA,QACvB,OACI,qBAAKzE,UAAS,4BAAuBsC,GAAQ,gBAA7C,SACQ,sBAAKtC,UAAU,qBAAf,UACI,qBAAKC,IAAKqC,EAAOA,EAAKP,KAAO,GAAI5B,IAAKmC,EAAOA,EAAKV,KAAO,GAAI5B,UAAU,mBACvE,oBAAIA,UAAU,iBAAd,SAAgCsC,EAAOA,EAAKV,KAAO,KACnD,wBAAQ5B,UAAU,sBAAsByC,QAASgC,EAAjD,SACI,qBAAKxE,IAAKyE,EAAevE,IAAI,6HAAyBH,UAAU,8BCSzE2E,MAff,YAA8E,IAAtDC,EAAqD,EAArDA,MAAOhD,EAA8C,EAA9CA,KAAMiD,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,OAAQL,EAAsB,EAAtBA,QAASM,EAAa,EAAbA,WAC5D,OACI,qBAAK/E,UAAS,sBAAiB4B,EAAjB,YAAyBkD,GAAU,gBAAjD,SACI,uBAAMlD,KAAMA,EAAM5B,UAAU,mBAA5B,UACI,wBAAQ0C,KAAK,SAAS1C,UAAU,sBAAsByC,QAASgC,EAA/D,SACI,qBAAKxE,IAAKyE,EAAevE,IAAI,6HAAyBH,UAAU,wBAEpE,oBAAIA,UAAU,eAAd,SAA8B4E,IAC7BC,EACD,wBAAQnC,KAAK,SAAS1C,UAAU,gBAAhC,SAAiD+E,UC6DlDC,MAhEf,WACI,MAA4DhC,oBAAS,GAArE,mBAAOiC,EAAP,KAA+BC,EAA/B,KACA,EAAsDlC,oBAAS,GAA/D,mBAAOmC,EAAP,KAA4BC,EAA5B,KACA,EAA0DpC,oBAAS,GAAnE,mBAAOqC,EAAP,KAA8BC,EAA9B,KACA,EAAwCtC,mBAAS,IAAjD,mBAAOuC,EAAP,KAAqBC,EAArB,KAEA,SAASC,IACLH,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,EAAgB,IAmBtB,OACK,sBAAKxF,UAAU,OAAf,UACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAM6C,cAfZ,WACIqC,GAA0B,IAcqBpC,WAXnD,WACIsC,GAAuB,IAUyDrC,aAnBpF,WACIuC,GAAyB,IAkB4F/C,YAPzH,SAAyBD,GACrBkD,EAAgBlD,MAOd,eAAC,EAAD,CAAesC,MAAM,4HAAwBhD,KAAK,OAAOkD,OAAQG,EAAyBR,QAASgB,EAAgBV,WAAW,yDAA9H,UACM,uBAAOnD,KAAK,SAASc,KAAK,OAAOV,GAAI,eAAehC,UAAU,wCAC9D,sBAAMA,UAAU,oCAChB,uBAAO4B,KAAK,UAAUc,KAAK,OAAOV,GAAI,gBAAgBhC,UAAU,kDAChE,sBAAMA,UAAU,wCAEtB,eAAC,EAAD,CAAe4E,MAAM,gEAAchD,KAAK,MAAMkD,OAAQK,EAAqBV,QAASgB,EAAgBV,WAAW,6CAA/G,UACM,uBAAOnD,KAAK,OAAOc,KAAK,OAAOV,GAAI,mBAAmBhC,UAAU,sCAAsC0F,YAAY,qDAClH,sBAAM1F,UAAU,wCAChB,uBAAO4B,KAAK,OAAOc,KAAK,MAAMV,GAAI,oBAAoBhC,UAAU,gDAAgD0F,YAAY,uGAC5H,sBAAM1F,UAAU,4CAEtB,cAAC,EAAD,CAAYsC,KAAMiD,EAAcd,QAASgB,IACzC,eAAC,EAAD,CAAeb,MAAM,wFAAkBhD,KAAK,SAASkD,OAAQO,EAAuBZ,QAASgB,EAAgBV,WAAW,yDAAxH,UACM,uBAAOnD,KAAK,OAAOc,KAAK,MAAMV,GAAI,eAAehC,UAAU,gDAAgD0F,YAAY,uGACvH,sBAAM1F,UAAU,uCAEpB,qBAAKA,UAAU,0BAAf,SACI,uBAAM4B,KAAK,SAAS5B,UAAU,mBAA9B,UACI,wBAAQ0C,KAAK,SAAS1C,UAAU,sBAAhC,SACI,qBAAKC,IAAKyE,EAAevE,IAAI,6HAAyBH,UAAU,wBAEpE,oBAAIA,UAAU,kBAAd,sEACA,wBAAQ0C,KAAK,SAAS1C,UAAU,qCAAhC,+BAGR,cAAC,EAAD,QCvDG2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.901ae5ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import logo from '../images/logo.svg';\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n              <img src={logo} alt=\"Картинка логотипа\" className=\"header__logo\"/>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/edit-button.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","export class Api {\r\n    constructor({adress, token}) {\r\n        this._adress = adress;\r\n        this._token = token;\r\n    }\r\n\r\n    _getResponseData(response) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.reject(new Error(`Ошибка ${response.status}`))\r\n    }\r\n\r\n    getProfileInfo() {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }).then(this._getResponseData)\r\n    }\r\n\r\n    changeProfileInfo(profileName, profileAbout) {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              name: profileName,\r\n              about: profileAbout\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    getInitialCards() {\r\n        return  fetch(`${this._adress}/cards`,{\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }).then(this._getResponseData)\r\n    }\r\n\r\n    addCards(data) {\r\n        return fetch(`${this._adress}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization:this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    removeCards(id) {\r\n        return  fetch(`${this._adress}/cards/${id}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(this._getResponseData)  \r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return fetch(`${this._adress}/cards/likes/${cardId}`, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: {\r\n                authorization:this._token\r\n            }\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n\r\n    updateAvatar(avatarLink) {\r\n        return fetch(`${this._adress}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              avatar: avatarLink\r\n            })\r\n        })\r\n        .then(this._getResponseData)\r\n    }\r\n}\r\n\r\nconst api = new Api({adress:'https://mesto.nomoreparties.co/v1/cohort-22', token:'3df83bef-b96a-43f8-aaa6-dee5c669d99f'});\r\n\r\nexport default api","import React from 'react';\r\nfunction Card({card, onCardClick, name, link, likes}) {\r\n    function handleClick() {\r\n        onCardClick(card);\r\n      } \r\n\r\n    return (\r\n        <article className=\"element\">\r\n            <button className=\"element__delete\"></button>\r\n            <img className=\"element__image\" alt=\"картинки нет\" src={link} onClick={handleClick}/>\r\n            <div className=\"element__caption\">\r\n                <h2 className=\"element__title\">{name}</h2>\r\n                <div className=\"element__sign\">\r\n                    <button type=\"button\" className=\"element__like\"></button>\r\n                    <p className=\"element__like-numbers\">{likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </article>     \r\n    )\r\n}\r\nexport default Card","import React, { useEffect, useState } from 'react';\r\nimport editButtonPath from '../images/edit-button.svg';\r\nimport addButtonPath from '../images/plus.svg';\r\nimport api from '../utils/api';\r\nimport Card from '../components/Card';\r\n\r\nfunction Main({onEditProfile, onAddPlace , onEditAvatar, onCardClick}) {\r\n  const [userName, setUserName] = useState('');\r\n  const [userDescription, setUserDescription] = useState('');\r\n  const [userAvatar, setUserAvatar] = useState('');\r\n  const [cards,setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getProfileInfo()\r\n      .then(data => {\r\n        setUserName(data.name)\r\n        setUserDescription(data.about)\r\n        setUserAvatar(data.avatar)\r\n      })\r\n      .catch(err => {\r\n          console.log(err)\r\n      })\r\n  },[])\r\n\r\n  useEffect(() => {\r\n      api.getInitialCards()\r\n        .then(data => {\r\n            console.log(data)\r\n            setCards(data.map(item => ({\r\n                name: item.name,\r\n                link: item.link,\r\n                likes: item.likes,\r\n                _id: item._id\r\n              })))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n  }, [])\r\n\r\n    return (\r\n        <main className=\"main\">\r\n              <section className=\"profile\">\r\n                      <div className=\"profile__avatar\">\r\n                          <img src={userAvatar} alt=\"Картинка профиля\" className=\"profile__avatar-image\"/>\r\n                          <img onClick={onEditAvatar} src={editButtonPath} alt=\"Картинка при наведении\" className=\"profile__avatar-hover\"/>\r\n                      </div>\r\n                      <div className=\"profile__info\">\r\n                        <h1 className=\"profile__title\">{userName}</h1>\r\n                        <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button\">\r\n                          <img src={editButtonPath} alt=\"картинка добавить текст\" className=\"profile__edit-button-image\"/>\r\n                        </button>\r\n                        <p className=\"profile__subtitle\">{userDescription}</p>\r\n                      </div> \r\n                      <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button\">\r\n                          <img src={addButtonPath} alt=\"иконка кнопки\" className=\"profile__add-button-image\"/>\r\n                      </button>       \r\n              </section>\r\n              <section className=\"elements\">\r\n                  {cards.map((card) => <Card key={card._id} onCardClick={onCardClick} card={card} name={card.name} link={card.link} likes={card.likes} />)}\r\n                   \r\n              </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n                <p className=\"footer__author\">&copy;{new Date().getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/Close-Icon.a004a2d5.svg\";","import closeIconPath from '../images/Close-Icon.svg';\r\nfunction ImagePopup({card, onClose}) {\r\n    return (\r\n        <div className={`popup popup_image ${card && 'popup_opened'}`}>\r\n                <div className=\"popup__big-picture\">\r\n                    <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__picture\" />\r\n                    <h2 className=\"popup__caption\">{card ? card.name : ''}</h2>\r\n                    <button className=\"popup__close-button\" onClick={onClose}>\r\n                        <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\r\n                    </button>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImagePopup;","import closeIconPath from '../images/Close-Icon.svg';\r\n\r\nfunction PopupWithForm({title, name, children, isOpen, onClose, buttonText}) {\r\n    return (\r\n        <div className={`popup popup_${name} ${isOpen && 'popup_opened'}`}>\r\n            <form name={name} className=\"popup__container\" >\r\n                <button type=\"button\" className=\"popup__close-button\" onClick={onClose}>\r\n                    <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\r\n                </button>\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                {children}\r\n                <button type=\"submit\" className=\"popup__button\">{buttonText}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'\nimport closeIconPath from '../images/Close-Icon.svg';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState('');\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard('')\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n  return (\n       <div className=\"page\">\n          <Header />\n          <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n          <PopupWithForm title=\"Редактировать профиль\" name=\"edit\" isOpen={isEditProfilePopupOpen}  onClose={closeAllPopups} buttonText='Сохранить'>\n                <input name=\"Author\" type=\"text\" id= \"author-input\" className=\"popup__input popup__input_text_name\" />\n                <span className=\"popup__error author-input-error\"></span>\n                <input name=\"Profile\" type=\"text\" id= \"profile-input\" className=\"popup__input popup__input_text_about-yourself\" />\n                <span className=\"popup__error profile-input-error\"></span>\n          </PopupWithForm>\n          <PopupWithForm title=\"Новое место\" name=\"add\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} buttonText='Создать'>\n                <input name=\"Name\" type=\"text\" id= \"author-add-input\" className=\"popup__input popup__input_text_name\" placeholder=\"Название\" />\n                <span className=\"popup__error author-add-input-error\"></span>\n                <input name=\"Link\" type=\"url\" id= \"profile-add-input\" className=\"popup__input popup__input_text_about-yourself\" placeholder=\"Ссылка на картинку\" />\n                <span className=\"popup__error profile-add-input-error\"></span>\n          </PopupWithForm>\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} buttonText='Сохранить'>\n                <input name=\"Link\" type=\"url\" id= \"avatar-input\" className=\"popup__input popup__input_text_about-yourself\" placeholder=\"Ссылка на картинку\" />\n                <span className=\"popup__error avatar-input-error\"></span>\n          </PopupWithForm>\n            <div className=\"popup popup_delete-card\">\n                <form name=\"myForm\" className=\"popup__container\" >\n                    <button type=\"button\" className=\"popup__close-button\">\n                        <img src={closeIconPath} alt=\"картинка закрытия окна\" className=\"popup__close-icon\"/>\n                    </button>\n                    <h2 className=\"popup__question\">Вы уверены?</h2>\n                    <button type=\"submit\" className=\"popup__button popup__button_margin\">Да</button>\n                </form>    \n            </div>\n            <Footer />\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}